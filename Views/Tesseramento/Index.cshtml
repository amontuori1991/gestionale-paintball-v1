@model Full_Metal_Paintball_Carmagnola.Models.TesseramentoViewModel

@{
    ViewData["Title"] = "Tesseramento";
}

<style>
    /* Tutto il tuo CSS, reintegrato qui */
    body {
        background-color: #CED4B5;
        margin: 0;
        padding: 0;
        font-family: Arial, sans-serif;
        height: 100%;
        overflow-x: hidden;
    }

    .background-logo {
        position: fixed;
        top: 100px;
        left: 50%;
        transform: translateX(-50%);
        width: 250px;
        height: 250px;
        background: url('/img/logo.gif') no-repeat top center;
        background-size: contain;
        background-repeat: no-repeat;
        opacity: 1;
        z-index: 1;
        pointer-events: none;
    }

    .container {
        position: relative;
        z-index: 2;
        padding-top: 200px;
        padding-bottom: 20px;
        min-height: 100vh;
    }

    .form-container {
        background-color: white;
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        max-width: 500px;
        margin: 0 auto;
        padding-top: 30px;
    }

        .form-container h2 {
            font-size: 2rem;
            color: #0d6efd;
            text-align: center;
            margin-bottom: 30px;
        }

        .form-container label {
            font-size: 1.1rem;
            margin-bottom: 5px;
        }

        .form-container input,
        .form-container select,
        .form-container button {
            width: 100%;
            padding: 10px;
            margin-bottom: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 1rem;
        }

        .form-container button {
            background-color: #0d6efd;
            color: white;
            border: none;
            cursor: pointer;
            font-weight: bold;
        }

            .form-container button:hover {
                background-color: #0056b3;
            }

    .signature-pad {
        width: 100%;
        height: 150px;
        border: 1px solid #ddd;
        border-radius: 5px;
        background-color: #f5f5f5;
        display: flex;
        justify-content: center;
        align-items: center;
    }

        .signature-pad canvas {
            width: 100%;
            height: 100%;
            border-radius: 5px;
        }

    .terms-checkbox-wrapper {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
    }

    .terms-checkbox {
        width: 20px;
        height: 20px;
        border: 2px solid #ddd;
        border-radius: 3px;
        position: relative;
        margin-right: 10px;
        cursor: pointer;
        flex-shrink: 0; /* Previene il rimpicciolimento */
    }

        .terms-checkbox.checked {
            background-color: red;
        }

            .terms-checkbox.checked::after {
                content: "X";
                position: absolute;
                top: -5px;
                left: 3px;
                font-size: 16px;
                color: white;
                font-weight: bold;
            }

    /* Stili per i messaggi di validazione */
    .field-validation-error {
        color: #dc3545;
        font-size: 0.875em;
        margin-top: -15px; /* Rimuovi spazio extra tra input ed errore */
        margin-bottom: 10px;
        display: block; /* Assicurati che l'errore vada a capo */
    }

    .input-validation-error {
        border-color: #dc3545; /* Rende il bordo rosso per gli input con errore */
    }
</style>

<div class="background-logo"></div>

<div class="container">
    <div class="form-container">
        <h2>Tesseramento</h2>

        <form method="post" asp-action="Index" id="tesseramentoForm">
            <div class="form-group">
                <label asp-for="Nome"></label>
                <input asp-for="Nome" class="form-control" />
                <span asp-validation-for="Nome" class="text-danger field-validation-error"></span>
            </div>

            <div class="form-group">
                <label asp-for="Cognome"></label>
                <input asp-for="Cognome" class="form-control" />
                <span asp-validation-for="Cognome" class="text-danger field-validation-error"></span>
            </div>

            <div class="form-group">
                <label asp-for="DataNascita"></label>
                <input asp-for="DataNascita" class="form-control" />
                <span asp-validation-for="DataNascita" class="text-danger field-validation-error"></span>
            </div>

            <div class="form-group">
                <label asp-for="Genere"></label>
                <select asp-for="Genere" class="form-control">
                    <option value="">Seleziona...</option>
                    <option value="Maschio">Maschio</option>
                    <option value="Femmina">Femmina</option>
                </select>
                <span asp-validation-for="Genere" class="text-danger field-validation-error"></span>
            </div>

            <div class="form-group">
                <label asp-for="ComuneNascita"></label>
                <input asp-for="ComuneNascita" class="form-control" />
                <span asp-validation-for="ComuneNascita" class="text-danger field-validation-error"></span>
            </div>

            <div class="form-group">
                <label asp-for="ComuneResidenza"></label>
                <input asp-for="ComuneResidenza" class="form-control" />
                <span asp-validation-for="ComuneResidenza" class="text-danger field-validation-error"></span>
            </div>

            <div class="form-group">
                <label asp-for="Email"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger field-validation-error"></span>
            </div>

            <div class="form-group">
                <label asp-for="CodiceFiscale"></label>
                <input asp-for="CodiceFiscale" class="form-control" />
                <span asp-validation-for="CodiceFiscale" class="text-danger field-validation-error"></span>
            </div>

            <div class="form-group">
                <label asp-for="Minorenne"></label>
                <select asp-for="Minorenne" class="form-control">
                    <option value="">Seleziona...</option>
                    <option value="Sì">Sì</option>
                    <option value="No">No</option>
                </select>
                <span asp-validation-for="Minorenne" class="text-danger field-validation-error"></span>
            </div>

            <div id="GenitoreSection" style="display: none;">
                <div class="form-group">
                    <label asp-for="NomeGenitore"></label>
                    <input asp-for="NomeGenitore" class="form-control" />
                    <span asp-validation-for="NomeGenitore" class="text-danger field-validation-error"></span>
                </div>
                <div class="form-group">
                    <label asp-for="CognomeGenitore"></label>
                    <input asp-for="CognomeGenitore" class="form-control" />
                    <span asp-validation-for="CognomeGenitore" class="text-danger field-validation-error"></span>
                </div>
            </div>

            <div class="terms-checkbox-wrapper">
                <div id="termsCheckbox" class="terms-checkbox"></div>
                <label asp-for="TerminiAccettati"></label>
                <input type="hidden" asp-for="TerminiAccettati" id="TerminiAccettatiInput" />
                <span asp-validation-for="TerminiAccettati" class="text-danger field-validation-error"></span>
            </div>

            <div class="form-group">
                <label asp-for="Firma"></label>
                <div class="signature-pad" id="signature-pad">
                    <canvas id="signatureCanvas"></canvas>
                </div>
                <button type="button" id="clearSignature" class="btn btn-danger">Cancella Firma</button>
                <input type="hidden" asp-for="Firma" id="FirmaInput" />
                <span asp-validation-for="Firma" class="text-danger field-validation-error"></span>
            </div>

            <button type="submit" class="btn btn-primary">Invia</button>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Riferimenti agli elementi DOM
        const minorenneSelect = document.getElementById('Minorenne');
        const genitoreSection = document.getElementById('GenitoreSection');
        const nomeGenitoreInput = document.getElementById('NomeGenitore');
        const cognomeGenitoreInput = document.getElementById('CognomeGenitore');
        const termsCheckboxDiv = document.getElementById('termsCheckbox');
        const terminiAccettatiInput = document.getElementById('TerminiAccettatiInput');
        const signatureCanvas = document.getElementById("signatureCanvas");
        const ctx = signatureCanvas.getContext("2d");
        const firmaInput = document.getElementById('FirmaInput'); // Riferimento all'input hidden della firma

        // Configurazione del Canvas per la firma
        signatureCanvas.width = 400; // Puoi adattare queste dimensioni
        signatureCanvas.height = 100; // Puoi adattare queste dimensioni
        ctx.lineWidth = 2; // Spessore della linea di disegno
        ctx.lineCap = 'round'; // Estremità arrotondate per un tratto più morbido
        ctx.strokeStyle = '#000'; // Colore del tratto (nero)

        let drawing = false; // Flag per indicare se l'utente sta disegnando

        // Funzione per aggiornare la validazione lato client per un campo specifico
        function updateClientValidation(elementId, isRequired) {
            const inputElement = document.getElementById(elementId);
            if (!inputElement || !$.validator) return; // Esci se l'elemento o jQuery Validation non esistono

            const formValidator = $('#tesseramentoForm').validate();
            const validationSpan = $(`span[data-valmsg-for="${inputElement.name}"]`); // Seleziona lo span di validazione

            if (isRequired) {
                inputElement.setAttribute('required', 'required');
                // Aggiungi/aggiorna la regola 'required' in jQuery Validation
                $(inputElement).rules("add", {
                    required: true,
                    messages: {
                        required: $(inputElement).data('val-required') || "Questo campo è obbligatorio." // Usa il messaggio da data-val-required
                    }
                });
            } else {
                inputElement.removeAttribute('required'); // Rimuovi l'attributo HTML5 'required'

                // Rimuovi la regola 'required' in jQuery Validation
                $(inputElement).rules("remove", "required");

                inputElement.value = ''; // Pulisci il valore se il campo non è più richiesto

                // IMPORTANTE: Pulisci manualmente i messaggi di errore e lo stato di validazione.
                validationSpan.empty(); // Pulisci lo span dei messaggi di errore
                $(inputElement).removeClass("input-validation-error"); // Rimuovi la classe che mette il bordo rosso
                formValidator.element(inputElement); // Forza la ri-validazione (utile per pulire lo stato interno)
            }
        }

        // Gestione della visibilità e obbligatorietà della sezione genitore
        function handleMinorenneChange() {
            if (minorenneSelect.value == 'No') {
                genitoreSection.style.display = 'none';
                updateClientValidation('NomeGenitore', false);
                updateClientValidation('CognomeGenitore', false);
            } else if (minorenneSelect.value == 'Sì') {
                genitoreSection.style.display = 'block';
                updateClientValidation('NomeGenitore', true);
                updateClientValidation('CognomeGenitore', true);
            } else { // Gestisci il caso in cui sia "Seleziona..." o altro
                genitoreSection.style.display = 'none';
                updateClientValidation('NomeGenitore', false);
                updateClientValidation('CognomeGenitore', false);
            }
        }

        // Event listener per il cambio di Minorenne
        minorenneSelect.addEventListener('change', handleMinorenneChange);

        // Gestione del click sulla casella per accettare i termini
        termsCheckboxDiv.addEventListener('click', function() {
            const isChecked = !this.classList.contains('checked'); // Calcola il nuovo stato
            if (isChecked) {
                this.classList.add('checked');
            } else {
                this.classList.remove('checked');
            }
            terminiAccettatiInput.value = isChecked ? 'true' : 'false';

            // Forza la ri-validazione lato client per il campo TerminiAccettati
            if ($.validator) {
                const formValidator = $('#tesseramentoForm').validate();
                formValidator.element(terminiAccettatiInput);
            }
        });

        // Event listener per il disegno sul canvas (firma)
        signatureCanvas.addEventListener("mousedown", function(e) {
            drawing = true;
            ctx.beginPath(); // Inizia un nuovo percorso
            ctx.moveTo(e.offsetX, e.offsetY); // Sposta all'inizio del disegno
        });

        signatureCanvas.addEventListener("mousemove", function(e) {
            if (drawing) {
                ctx.lineTo(e.offsetX, e.offsetY); // Disegna una linea fino alla posizione corrente
                ctx.stroke(); // Esegui il tratto
            }
        });

        signatureCanvas.addEventListener("mouseup", function() {
            drawing = false;
            validateAndSetSignature(); // Valida e salva la firma quando il disegno finisce
        });

        signatureCanvas.addEventListener("mouseleave", function() {
            drawing = false;
            validateAndSetSignature(); // Valida e salva se il mouse esce dal canvas
        });

        // Funzione per cancellare la firma
        document.getElementById('clearSignature').addEventListener('click', function() {
            ctx.clearRect(0, 0, signatureCanvas.width, signatureCanvas.height); // Cancella il canvas
            firmaInput.value = ''; // Pulisci l'input hidden della firma

            // Forza la ri-validazione lato client del campo Firma
            if ($.validator) {
                const formValidator = $('#tesseramentoForm').validate();
                formValidator.element(firmaInput);
            }
        });

        // Funzione per validare il canvas e impostare il valore dell'input hidden Firma
        function validateAndSetSignature() {
            const imageData = ctx.getImageData(0, 0, signatureCanvas.width, signatureCanvas.height);
            let isEmpty = true;
            // Controlla se ci sono pixel disegnati (canale alfa diverso da 0)
            for (let i = 0; i < imageData.data.length; i += 4) {
                if (imageData.data[i + 3] !== 0) { // Se il canale alfa non è 0, c'è qualcosa disegnato
                    isEmpty = false;
                    break;
                }
            }

            if (isEmpty) {
                firmaInput.value = ''; // Se il canvas è vuoto, l'input hidden deve essere vuoto
            } else {
                firmaInput.value = signatureCanvas.toDataURL("image/png"); // Altrimenti, converti e assegna
            }

            // Forza la ri-validazione lato client del campo Firma
            if ($.validator) {
                const formValidator = $('#tesseramentoForm').validate();
                formValidator.element(firmaInput);
            }
        }

        // Inizializza lo stato dei campi al caricamento della pagina
        document.addEventListener('DOMContentLoaded', function() {
            // Inizializza lo stato della checkbox TerminiAccettati in base al valore del model
            if (terminiAccettatiInput.value === 'true') {
                termsCheckboxDiv.classList.add('checked');
            } else {
                termsCheckboxDiv.classList.remove('checked');
            }

            // Importante: ri-parsare la validazione unobtrusive dopo che tutti gli elementi sono nel DOM
            if ($.validator) {
                // Rimuovi i dati di validazione esistenti per forzare una re-analisi
                $('#tesseramentoForm').removeData('validator');
                $('#tesseramentoForm').removeData('unobtrusiveValidation');
                // Parsa nuovamente il form
                $.validator.unobtrusive.parse('#tesseramentoForm');

                // Assicurati che l'input hidden per TerminiAccettati abbia gli attributi di validazione corretti
                if (!$(terminiAccettatiInput).attr('data-val')) {
                    $(terminiAccettatiInput).attr('data-val', 'true');
                    $(terminiAccettatiInput).attr('data-val-range', 'Devi accettare i termini e le condizioni');
                    $(terminiAccettatiInput).attr('data-val-range-min', 'True');
                    $(terminiAccettatiInput).attr('data-val-range-max', 'True');
                }

                const formValidator = $('#tesseramentoForm').validate(); // Ottieni il validatore dopo il parse

                // Forza una validazione iniziale del campo TerminiAccettati
                if (formValidator) {
                    formValidator.element(terminiAccettatiInput);
                }

                // Forza la validazione iniziale della firma
                validateAndSetSignature(); // Per assicurarsi che lo stato iniziale sia correttamente validato

                // CHIAMATA FONDAMENTALE: imposta lo stato iniziale dei campi genitore
                handleMinorenneChange();
            }
        });

    </script>
}