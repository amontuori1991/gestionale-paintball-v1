@using System.Globalization
@{
    ViewData["Title"] = "Presenze Staff";
    <link href="~/css/presenze-responsive.css" rel="stylesheet" />
    var dateList = ViewBag.DateList as List<DateTime>;
    var reperibilitaList = ViewBag.ReperibilitaList as List<Full_Metal_Paintball_Carmagnola.Models.AssenzaCalendario>;
    var presenzaList = ViewBag.PresenzaList as List<Full_Metal_Paintball_Carmagnola.Models.PresenzaStaff>;
    var staff = new List<string> { "Simone", "Davide", "Andrea", "Federico", "Enrico" };
}

<style>
    .riga-infrasettimanale {
        background-color: #fff3cd !important; /* Stile giallo chiaro su tutta la riga */
    }
</style>

<div class="content-container">

    <h2 class="text-center">Gestione Presenze Staff</h2>

    <div class="mb-3 text-center">
        <button id="aggiungiInfrasettimanale" class="btn btn-warning">Inserisci data infrasettimanale</button>
    </div>

    <div class="d-flex justify-content-center mb-3">
        <input type="text" id="filtroPresenze" placeholder="Filtra per giorno, data o nome..." class="form-control" style="max-width: 300px;" />
    </div>

    <div class="table-responsive">
        <table class="responsive-table">
            <thead>
                <tr>
                    <th>Giorno</th>
                    <th>Data</th>
                    <th>Reperibile</th>
                    @foreach (var m in staff)
                    {
                        <th>@m</th>
                    }
                    <th>Azioni</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var giorno in dateList)
                {
                    var giornoSet = giorno.ToString("dddd", new CultureInfo("it-IT"));
                    var isWeekend = giorno.DayOfWeek == DayOfWeek.Saturday || giorno.DayOfWeek == DayOfWeek.Sunday;
                    var rep = reperibilitaList.FirstOrDefault(r => r.Data.Date == giorno.Date);
                    var sceltaRep = string.IsNullOrWhiteSpace(rep?.Reperibile) ? "In attesa" : rep.Reperibile.Trim();
                    var repClass = sceltaRep == "Nessuno" ? "bg-danger" :
                    sceltaRep == "In attesa" ? "bg-warning" : "bg-success";

                    <tr data-data="@giorno.ToString("yyyy-MM-dd")" class="@(isWeekend ? "" : "riga-infrasettimanale")">
                        <td data-label="Giorno">@giornoSet</td>
                        <td data-label="Data">@giorno.ToString("dd/MM/yyyy")</td>
                        <td data-label="Reperibile" class="@repClass">@sceltaRep</td>

                        @foreach (var membro in staff)
                        {
                            var prs = presenzaList.FirstOrDefault(p => p.Data.Date == giorno.Date && p.NomeStaff == membro);
                            var currentSelection = prs?.Presente == true ? "SI" :
                            prs?.Presente == false ? "NO" : "In attesa";

                            var bgClass = currentSelection == "SI" ? "bg-success" :
                            currentSelection == "NO" ? "bg-danger" : "bg-warning";

                            <td data-label="@membro" class="@bgClass">
                                <select class="presente-select form-select" data-data="@giorno.ToString("yyyy-MM-dd")" data-nome="@membro">
                                    <option value="In attesa" selected="@(currentSelection == "In attesa" ? "selected" : null)">In attesa</option>
                                    <option value="SI" selected="@(currentSelection == "SI" ? "selected" : null)">SI</option>
                                    <option value="NO" selected="@(currentSelection == "NO" ? "selected" : null)">NO</option>
                                </select>
                            </td>
                        }

                        <td data-label="Azioni">
                            @if (!isWeekend)
                            {
                                <button class="btn btn-danger btn-sm btn-danger-small elimina-data" data-data="@giorno.ToString("yyyy-MM-dd")">Elimina</button>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        $(function () {
            $('.presente-select').on('change', function () {
                const sel = $(this);
                const data = sel.data('data');
                const nome = sel.data('nome');
                const val = sel.val();
                const td = sel.closest('td');

                let presenteValue = null;
                if (val === 'SI') presenteValue = true;
                else if (val === 'NO') presenteValue = false;

                $.post('/PresenzeStaff/AggiornaPresenza', { data: data, nomeStaff: nome, presente: presenteValue })
                    .done(() => {
                        td.removeClass('bg-success bg-danger bg-warning');
                        if (val === 'SI') td.addClass('bg-success');
                        else if (val === 'NO') td.addClass('bg-danger');
                        else td.addClass('bg-warning');
                    })
                    .fail(() => alert("Errore durante il salvataggio della presenza."));
            });

            $('#aggiungiInfrasettimanale').on('click', function () {
                const dataSelezionata = prompt("Inserisci una data in formato GG/MM/AAAA:");
                if (dataSelezionata) {
                    $.post("/PresenzeStaff/InserisciDataInfrasettimanale", { data: dataSelezionata })
                        .done(() => location.reload())
                        .fail(() => alert("Errore nell'inserimento della data."));
                }
            });

            $('.elimina-data').on('click', function () {
                const data = $(this).data('data');
                if (confirm(`Vuoi eliminare la data ${data}?`)) {
                    $.post("/PresenzeStaff/EliminaDataInfrasettimanale", { data: data })
                        .done(() => location.reload())
                        .fail(() => alert("Errore nell'eliminazione della data."));
                }
            });

            $('#filtroPresenze').on('input', function () {
                const filtro = $(this).val().toLowerCase();
                $('.responsive-table tbody tr').each(function () {
                    const testoRiga = $(this).text().toLowerCase();
                    $(this).toggle(testoRiga.includes(filtro));
                });
            });
        });
    </script>
}
