@{
    ViewData["Title"] = "Statistiche";
    var anni = ViewBag.Anni as List<string>;
    var datiMese = ViewBag.DatiMese as Dictionary<string, int>;
    var datiCancellatiMese = ViewBag.DatiCancellatiMese as Dictionary<string, int>;
    var annualTotals = ViewBag.AnnualTotals as Dictionary<string, ValueTuple<int, int>>;
    int meseCorrente = ViewBag.MeseCorrente;
    string labelMese = ViewBag.LabelMese;
    var colors = new[] { "#0d6efd", "#198754", "#ffc107", "#0dcaf0", "#6f42c1", "#fd7e14", "#20c997", "#6610f2", "#e83e8c" };
}

<link href="~/css/statistiche-responsive.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="background-logo"></div>

<div class="statistiche-container">
    <h2>Statistiche Partite – @labelMese</h2>

    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
        <a asp-action="Index" asp-route-mese="@(meseCorrente == 1 ? 12 : meseCorrente - 1)" class="btn btn-outline-primary">← Mese Precedente</a>
        <strong>@labelMese.ToUpper()</strong>
        <a asp-action="Index" asp-route-mese="@(meseCorrente == 12 ? 1 : meseCorrente + 1)" class="btn btn-outline-primary">Mese Successivo →</a>
    </div>

    <canvas id="graficoMensile" style="max-height: 300px; width: 100%;"></canvas>


    <hr style="margin-top: 50px; margin-bottom: 30px;" />

    <h3>Riepilogo</h3>
    <table class="summary-table responsive-table">
        <thead>
            <tr>
                <th>Anno</th>
                <th>Confermate (@labelMese)</th>
                <th>Cancellate (@labelMese)</th>
                <th>Totale Anno Confermate</th>
                <th>Totale Anno Cancellate</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var anno in anni)
            {
                var conf = datiMese.ContainsKey(anno) ? datiMese[anno] : 0;
                var canc = datiCancellatiMese.ContainsKey(anno) ? datiCancellatiMese[anno] : 0;
                var annualConf = annualTotals.ContainsKey(anno) ? annualTotals[anno].Item1 : 0;
                var annualCanc = annualTotals.ContainsKey(anno) ? annualTotals[anno].Item2 : 0;

                <tr>
                    <td>@anno</td>
                    <td>@conf</td>
                    <td>@canc</td>
                    <td>@annualConf</td>
                    <td>@annualCanc</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    const labels = @Html.Raw(Json.Serialize(anni));
    const datiConfermate = @Html.Raw(Json.Serialize(datiMese));
    const datiCancellate = @Html.Raw(Json.Serialize(datiCancellatiMese));
    const colorList = @Html.Raw(Json.Serialize(colors));
    const isMobile = window.innerWidth < 768;

    const confermateData = labels.map((anno) => datiConfermate[anno] || 0);
    const cancellateData = labels.map((anno) => datiCancellate[anno] || 0);

    const data = {
        labels: labels,
        datasets: [
            {
                label: 'Confermate',
                data: confermateData,
                backgroundColor: labels.map((_, i) => colorList[i % colorList.length]),
                barThickness: isMobile ? 10 : 14
            },
            {
                label: 'Cancellate',
                data: cancellateData,
                backgroundColor: '#dc3545',
                barThickness: isMobile ? 10 : 14
            }
        ]
    };

    const config = {
        type: 'bar',
        data: data,
        options: {
            indexAxis: 'y',
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: 'bottom'
                },
                title: {
                    display: true,
                    text: 'Confronto partite - @labelMese'
                }
            },
            scales: {
                x: {
                    beginAtZero: true,
                    title: {
                        display: true,
                        text: 'Numero Partite'
                    }
                },
                y: {
                    ticks: {
                        autoSkip: false
                    }
                }
            }
        }
    };

    const canvas = document.getElementById('graficoMensile');
    canvas.height = isMobile ? 280 : 220;

    new Chart(canvas.getContext('2d'), config);
</script>


